.specify-selector {
    // 这招可以让div， ul li全部横向排列了
    display: flex;
    &+.specify-selector {
        margin-top: 20px;
    }
    .list {
        border: 1px solid #f66;
        width: 200px;
        // line-height: 2; 这是什么意思呢？
        line-height: 2;
        font-weight: bold;
        font-size: 20px;
        color: #f66;
        &+.list {
            margin-left: 20px;
        }
        li {
            padding: 0 10px;
        }
        .next {
            background-color: #66f;
            color: #fff;
            // + 针对紧随该节点的节点
            &+li {
                background-color: #f90;
                color: #fff;
            }
        }
        .next-all {
            background-color: #66f;
            color: #fff;
            &~li {
                background-color: #09f;
                color: #fff;
            }
        }
        .next-filter {
            background-color: #66f;
            color: #fff;
            // ~用法灵活，可以和class搭配使用
            &~.filter {
                background-color: #09f;
                color: #fff;
            }
        }
    }
    .button {
        margin-left: 20px;
        // 这里表示  &的内容不变，而是+后面指点的节点会变化！
        &+.button {
            margin-left: 20px;
        }
        // 这里实质是不会对input做任何修饰的，修饰的都是label
        label {
            // label 似乎是行内标签
            display: block;
            padding: 0 10px;
            height: 40px;
            background-color: #3c9;
            // 这个感觉总是在用
            cursor: pointer;
            line-height: 40px;
            font-size: 16px;
            color: #fff;
            transition: all 300ms;
        }
        // checked 伪类，表示任何处于选中状态的radio
        // 这里是对+后面的节点做操作！
        input:checked+label {
            padding: 0 20px;
            border-radius: 20px;
            background-color: #f66;
        }
    }
}